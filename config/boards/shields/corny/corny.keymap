#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define U_TAPPING_TERM 200
#
#include "../../../miryoku_behaviors/miryoku_clipboard.h"
#include "../../../miryoku_behaviors/miryoku_double_tap_guard.h"
#include "../../../miryoku_behaviors/miryoku_shift_functions.h"
#include "../../../miryoku_behaviors/miryoku_mousekeys.h"
#include "../../../miryoku_behaviors/miryoku_behaviors.dtsi"
#include "../../../miryoku_behaviors/miryoku_behaviors.h"

#define U_NP &none // key is not present
#define U_NA &none // present but not available for use
#define U_NU &none // available but not used


#define U_BASE   0
#define U_EXTRA  1
#define U_TAP    2
#define U_BUTTON 3
#define U_NAV    4
#define U_MOUSE  5
#define U_MEDIA  6
#define U_NUM    7
#define U_SYM    8
#define U_FUN    9

#define U_MACRO_VA_ARGS(macro, ...) macro(__VA_ARGS__)
#define U_STRINGIFY(x) #x
#define U_MACRO(name,...) \
/ { \
  macros { \
    name: name { \
      label = U_STRINGIFY(ZM_ ## name); \
      compatible = "zmk,behavior-macro"; \
      #binding-cells = <0>; \
      __VA_ARGS__ \
    }; \
  }; \
};


/ {
	behaviors {
	};

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                U_NU &kp Q             &kp W         &kp E            &kp R             &kp T                           &kp Y              &kp U              &kp I              &kp O             &kp P                 U_NU
                U_NU U_MT(LGUI, A)     U_MT(LALT, S) U_MT(LCTRL, D)   U_MT(LSHFT, F)    &kp G                           &kp H              U_MT(LSHFT, J)     U_MT(LCTRL, K)     U_MT(LALT, L)     U_MT(LGUI, SQT)       U_NU
                U_NU U_LT(U_BUTTON, Z) U_MT(RALT, X) &kp C            &kp V             &kp B            &kp C_PP &none &kp N              &kp M              &kp COMMA          U_MT(RALT, DOT)   U_LT(U_BUTTON, SLASH) U_NU
                                                     U_LT(U_FUN, DEL) U_LT(U_NUM, BSPC) U_LT(U_SYM, RET)                U_LT(U_MOUSE, TAB) U_LT(U_NAV, SPACE) U_LT(U_MEDIA, ESC)
            >;
            sensor-bindings = <
                &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN
            >;
        };

    };
};
