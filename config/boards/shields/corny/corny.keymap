#include <behaviors.dtsi>
#include <behaviors/mouse_key_press.dtsi>
#if defined (MIRYOKU_KLUDGE_MOUSEKEYSPR)
  #include <behaviors/mouse_move.dtsi>
  #include <behaviors/mouse_scroll.dtsi>
#endif
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define U_TAPPING_TERM 200

#define U_MACRO_VA_ARGS(macro, ...) macro(__VA_ARGS__)
#define U_STRINGIFY(x) #x
#define U_MACRO(name,...) \
/ { \
  macros { \
    name: name { \
      label = U_STRINGIFY(ZM_ ## name); \
      compatible = "zmk,behavior-macro"; \
      #binding-cells = <0>; \
      __VA_ARGS__ \
    }; \
  }; \
};


#include "../../../miryoku_behaviors/miryoku_babel/miryoku_layer_list.h"
#include "../../../miryoku_behaviors/miryoku_clipboard.h"
#include "../../../miryoku_behaviors/miryoku_double_tap_guard.dtsi"
#include "../../../miryoku_behaviors/miryoku_double_tap_guard.h"
#include "../../../miryoku_behaviors/miryoku_shift_functions.h"
#include "../../../miryoku_behaviors/miryoku_shift_functions.dtsi"
#include "../../../miryoku_behaviors/miryoku_mousekeys.h"
#include "../../../miryoku_behaviors/miryoku_behaviors.dtsi"
#include "../../../miryoku_behaviors/miryoku_behaviors.h"

#define U_NP &none // key is not present
#define U_NA &none // present but not available for use
#define U_NU &none // available but not used

/ {
    keymap {
        compatible = "zmk,keymap";

        U_BASE {
            label = "Base";
            bindings = <
                U_NU &kp Q             &kp W         &kp E              &kp R              &kp T                          &kp Y            &kp U              &kp I             &kp O           &kp P                 U_NU
                U_NU U_MT(LGUI, A)     U_MT(LALT, S) U_MT(LCTRL, D)     U_MT(LSHFT, F)     &kp G                          &kp H            U_MT(LSHFT, J)     U_MT(LCTRL, K)    U_MT(LALT, L)   U_MT(LGUI, SQT)       U_NU
                U_NU U_LT(U_BUTTON, Z) U_MT(RALT, X) &kp C              &kp V              &kp B &bootloader  &bootloader &kp N            &kp M              &kp COMMA         U_MT(RALT, DOT) U_LT(U_BUTTON, SLASH) U_NU
                                                     U_LT(U_MEDIA, TAB) U_LT(U_NAV, SPACE) U_LT(U_MOUSE, ESC)             U_LT(U_SYM, RET) U_LT(U_NUM, SPACE) U_LT(U_FUN, BSPC)

                // flip
                // U_NU &kp Q             &kp W         &kp E            &kp R             &kp T                         &kp Y              &kp U              &kp I              &kp O           &kp P                 U_NU
                // U_NU U_MT(LGUI, A)     U_MT(LALT, S) U_MT(LCTRL, D)   U_MT(LSHFT, F)    &kp G                         &kp H              U_MT(LSHFT, J)     U_MT(LCTRL, K)     U_MT(LALT, L)   U_MT(LGUI, SQT)       U_NU
                // U_NU U_LT(U_BUTTON, Z) U_MT(RALT, X) &kp C            &kp V             &kp B &bootloader &bootloader &kp N              &kp M              &kp COMMA          U_MT(RALT, DOT) U_LT(U_BUTTON, SLASH) U_NU
                //                                      U_LT(U_FUN, DEL) U_LT(U_NUM, BSPC) U_LT(U_SYM, RET)              U_LT(U_MOUSE, TAB) U_LT(U_NAV, SPACE) U_LT(U_MEDIA, ESC)
            >;
            sensor-bindings = <
                &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN
            >;
        };

        U_EXTRA {label = "Extra"; bindings = <U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU >;};
        U_TAP  {label = "Tap"; bindings = <U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU >;};
        U_BUTTON {label = "Button"; bindings = <U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU >;};

        U_NAV {
            label = "Nav";
            bindings = <
                U_NU U_BOOT   &u_to_U_TAP &u_to_U_EXTRA &u_to_U_BASE U_NA                         U_RDO    U_PST     U_CPY     U_CUT     U_UND        U_NU
                U_NU &kp LGUI &kp LALT    &kp LCTRL     &kp LSHFT    U_NA                         &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &u_caps_word U_NU
                U_NU U_NA     &kp RALT    &u_to_U_NUM   &u_to_U_NAV  U_NA &bootloader &bootloader &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp INS      U_NU
                                          U_NA          U_NA         U_NA                         &kp RET  &kp SPACE &kp DEL
            >;
            sensor-bindings = <
                &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN
            >;
        };

        U_MOUSE {label = "Mouse"; bindings = <U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU U_NU >;};

        U_MEDIA {
            label = "Media";
            bindings = <
                U_NU U_BOOT   &u_to_U_TAP &u_to_U_EXTRA &u_to_U_BASE  U_NA                         U_RGB_EFF   U_RGB_HUI    U_RGB_SAI    U_RGB_BRI   U_RGB_TOG  U_NU
                U_NU &kp LGUI &kp LALT    &kp LCTRL     &kp LSHFT     U_NA                         &kp C_PREV  &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT  U_EP_TOG   U_NU
                U_NU U_NA     &kp RALT    &u_to_U_FUN   &u_to_U_MEDIA U_NA &bootloader &bootloader &u_bt_sel_0 &u_bt_sel_1  &u_bt_sel_2  &u_bt_sel_3 &u_bt_sel_3 U_NU
                                          U_NA          U_NA          U_NA                         &kp C_STOP  &kp C_PP     &kp C_MUTE
            >;
            sensor-bindings = <
                &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN
            >;
        };

        U_NUM {
            label = "Num";
            bindings = <
                U_NU &kp LBKT  &kp N7 &kp N8  &kp N9    &kp RBKT                          U_NA &u_to_U_BASE &u_to_U_EXTRA &u_to_U_TAP U_BOOT   U_NU
                U_NU &kp SEMI  &kp N4 &kp N5  &kp N6    &kp EQUAL                         U_NA &kp LSHFT    &kp LCTRL     &kp LALT    &kp LGUI U_NU
                U_NU &kp GRAVE &kp N1 &kp N2  &kp N3    &kp BSLH  &bootloader &bootloader U_NA &u_to_U_NUM  &u_to_U_NAV   &kp RALT    U_NA     U_NU
                                      &kp DOT &kp N0    &kp MINUS                         U_NA U_NA         &kp DEL

                // flip
                // U_NU U_BOOT   &u_to_U_TAP &u_to_U_EXTRA &u_to_U_BASE U_NA                          &kp LBKT  &kp N7 &kp N8  &kp N9 &kp RBKT  U_NU
                // U_NU &kp LGUI &kp LALT    &kp LCTRL     &kp LSHFT    U_NA                          &kp EQUAL &kp N4 &kp N5  &kp N6 &kp SEMI  U_NU
                // U_NU U_NA     &kp RALT    &u_to_U_NAV   &u_to_U_NUM  U_NA  &bootloader &bootloader &kp BSLH  &kp N1 &kp N2  &kp N3 &kp GRAVE U_NU
                //                           U_NA          U_NA         U_NA                          &kp MINUS &kp N0 &kp DOT
            >;
            sensor-bindings = <
                &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN
            >;
        };

        U_SYM {
            label = "Sym";
            bindings = <
                U_NU &kp LBRC  &kp AMPS &kp ASTRK &kp LPAR  &kp RBRC                          U_NA &u_to_U_BASE &u_to_U_EXTRA &u_to_U_TAP U_BOOT   U_NU
                U_NU &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS                          U_NA &kp LSHFT    &kp LCTRL     &kp LALT    &kp LGUI U_NU
                U_NU &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE  &bootloader &bootloader U_NA &u_to_U_SYM  &u_to_U_MOUSE &kp RALT    U_NA     U_NU
                                        &kp LPAR  &kp RPAR  &kp UNDER                         U_NA              U_NA          U_NA

                // flip
                // U_NU U_BOOT   &u_to_U_TAP &u_to_U_EXTRA &u_to_U_BASE U_NA                         &kp LBRC  &kp AMPS &kp ASTRK &kp LPAR  &kp RBRC U_NU
                // U_NU &kp LGUI &kp LALT    &kp LCTRL     &kp LSHFT    U_NA                         &kp PLUS  &kp DLLR &kp PRCNT &kp CARET &kp COLON U_NU
                // U_NU U_NA     &kp RALT    &u_to_U_MOUSE &u_to_U_SYM  U_NA &bootloader &bootloader &kp PIPE  &kp EXCL &kp AT    &kp HASH  &kp TILDE U_NU
                //                           U_NA          U_NA         U_NA                         &kp UNDER &kp LPAR &kp RPAR
            >;
            sensor-bindings = <
                &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN
            >;
        };

        U_FUN {
            label = "Fun";
            bindings = <
                U_NU &kp F12 &kp F7 &kp F8    &kp F9    &kp PSCRN                               U_NA &u_to_U_BASE &u_to_U_EXTRA &u_to_U_TAP U_BOOT   U_NU
                U_NU &kp F11 &kp F4 &kp F5    &kp F6    &kp SLCK                                U_NA &kp LSHFT    &kp LCTRL     &kp LALT    &kp LGUI U_NU
                U_NU &kp F10 &kp F1 &kp F2    &kp F3    &kp PAUSE_BREAK &bootloader &bootloader U_NA &u_to_U_FUN  &u_to_U_MEDIA &kp RALT    U_NA     U_NU
                                    &kp K_APP &kp SPACE &kp TAB                                 U_NA U_NA         U_NA

                // flip
                // U_NU U_BOOT   &u_to_U_TAP &u_to_U_EXTRA &u_to_U_BASE U_NA                         &kp PSCRN       &kp F7    &kp F8    &kp F9 &kp F12 U_NU
                // U_NU &kp LGUI &kp LALT    &kp LCTRL     &kp LSHFT    U_NA                         &kp SLCK        &kp F4    &kp F5    &kp F6 &kp F11 U_NU
                // U_NU U_NA     &kp RALT    &u_to_U_MEDIA &u_to_U_FUN  U_NA &bootloader &bootloader &kp PAUSE_BREAK &kp F1    &kp F2    &kp F3 &kp F10 U_NU
                //                           U_NA          U_NA         U_NA                         &kp TAB         &kp SPACE &kp K_APP
            >;
            sensor-bindings = <
                &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN
            >;
        };
    };
};
